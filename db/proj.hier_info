|main
CLOCK_50 => CLOCK_50.IN3
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[1] => key1_prev.DATAIN
KEY[1] => always0.IN1
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => tx_valid.IN1
serial_rx => serial_rx.IN1
dtr_n => ~NO_FANOUT~
HEX0[0] <= hex_decoder:h0.seg
HEX0[1] <= hex_decoder:h0.seg
HEX0[2] <= hex_decoder:h0.seg
HEX0[3] <= hex_decoder:h0.seg
HEX0[4] <= hex_decoder:h0.seg
HEX0[5] <= hex_decoder:h0.seg
HEX0[6] <= hex_decoder:h0.seg
HEX1[0] <= hex_decoder:h1.seg
HEX1[1] <= hex_decoder:h1.seg
HEX1[2] <= hex_decoder:h1.seg
HEX1[3] <= hex_decoder:h1.seg
HEX1[4] <= hex_decoder:h1.seg
HEX1[5] <= hex_decoder:h1.seg
HEX1[6] <= hex_decoder:h1.seg
HEX2[0] <= hex_decoder:h2.seg
HEX2[1] <= hex_decoder:h2.seg
HEX2[2] <= hex_decoder:h2.seg
HEX2[3] <= hex_decoder:h2.seg
HEX2[4] <= hex_decoder:h2.seg
HEX2[5] <= hex_decoder:h2.seg
HEX2[6] <= hex_decoder:h2.seg
HEX3[0] <= hex_decoder:h3.seg
HEX3[1] <= hex_decoder:h3.seg
HEX3[2] <= hex_decoder:h3.seg
HEX3[3] <= hex_decoder:h3.seg
HEX3[4] <= hex_decoder:h3.seg
HEX3[5] <= hex_decoder:h3.seg
HEX3[6] <= hex_decoder:h3.seg
HEX4[0] <= hex_decoder:h4.seg
HEX4[1] <= hex_decoder:h4.seg
HEX4[2] <= hex_decoder:h4.seg
HEX4[3] <= hex_decoder:h4.seg
HEX4[4] <= hex_decoder:h4.seg
HEX4[5] <= hex_decoder:h4.seg
HEX4[6] <= hex_decoder:h4.seg
HEX5[0] <= hex_decoder:h5.seg
HEX5[1] <= hex_decoder:h5.seg
HEX5[2] <= hex_decoder:h5.seg
HEX5[3] <= hex_decoder:h5.seg
HEX5[4] <= hex_decoder:h5.seg
HEX5[5] <= hex_decoder:h5.seg
HEX5[6] <= hex_decoder:h5.seg
LED[0] <= rx_valid.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= buffer:u_buffer.data_valid
LED[2] <= tx_valid.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= tx_ready.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= buffer:u_buffer.empty
LED[5] <= buffer:u_buffer.full
LED[6] <= <GND>
LED[7] <= <GND>
serial_tx <= uart_tx:u_tx.serial_tx


|main|uart_rxv2:u_rx
clk => recv_count[0]~reg0.CLK
clk => recv_count[1]~reg0.CLK
clk => recv_count[2]~reg0.CLK
clk => recv_count[3]~reg0.CLK
clk => recv_count[4]~reg0.CLK
clk => recv_count[5]~reg0.CLK
clk => recv_count[6]~reg0.CLK
clk => recv_count[7]~reg0.CLK
clk => recv_count[8]~reg0.CLK
clk => recv_count[9]~reg0.CLK
clk => recv_count[10]~reg0.CLK
clk => recv_count[11]~reg0.CLK
clk => recv_count[12]~reg0.CLK
clk => recv_count[13]~reg0.CLK
clk => recv_count[14]~reg0.CLK
clk => recv_count[15]~reg0.CLK
clk => watchdog_cnt[0].CLK
clk => watchdog_cnt[1].CLK
clk => watchdog_cnt[2].CLK
clk => watchdog_cnt[3].CLK
clk => watchdog_cnt[4].CLK
clk => watchdog_cnt[5].CLK
clk => watchdog_cnt[6].CLK
clk => watchdog_cnt[7].CLK
clk => watchdog_cnt[8].CLK
clk => watchdog_cnt[9].CLK
clk => watchdog_cnt[10].CLK
clk => watchdog_cnt[11].CLK
clk => watchdog_cnt[12].CLK
clk => watchdog_cnt[13].CLK
clk => watchdog_cnt[14].CLK
clk => watchdog_cnt[15].CLK
clk => data_valid~reg0.CLK
clk => rx_latch[0].CLK
clk => rx_latch[1].CLK
clk => rx_latch[2].CLK
clk => rx_latch[3].CLK
clk => rx_latch[4].CLK
clk => rx_latch[5].CLK
clk => rx_latch[6].CLK
clk => rx_latch[7].CLK
clk => rx_shift[0].CLK
clk => rx_shift[1].CLK
clk => rx_shift[2].CLK
clk => rx_shift[3].CLK
clk => rx_shift[4].CLK
clk => rx_shift[5].CLK
clk => rx_shift[6].CLK
clk => rx_shift[7].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => baud_cnt[13].CLK
clk => baud_cnt[14].CLK
clk => baud_cnt[15].CLK
clk => rx_sync_1.CLK
clk => rx_sync_0.CLK
clk => state~5.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => data_valid.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
rst => recv_count.OUTPUTSELECT
serial_rx => rx_sync_0.DATAIN
data_out[0] <= rx_latch[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= rx_latch[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= rx_latch[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= rx_latch[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= rx_latch[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= rx_latch[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= rx_latch[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= rx_latch[7].DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[0] <= recv_count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[1] <= recv_count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[2] <= recv_count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[3] <= recv_count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[4] <= recv_count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[5] <= recv_count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[6] <= recv_count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[7] <= recv_count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[8] <= recv_count[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[9] <= recv_count[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[10] <= recv_count[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[11] <= recv_count[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[12] <= recv_count[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[13] <= recv_count[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[14] <= recv_count[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
recv_count[15] <= recv_count[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|buffer:u_buffer
clk => mem.we_a.CLK
clk => mem.waddr_a[8].CLK
clk => mem.waddr_a[7].CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => rd_ptr[0].CLK
clk => rd_ptr[1].CLK
clk => rd_ptr[2].CLK
clk => rd_ptr[3].CLK
clk => rd_ptr[4].CLK
clk => rd_ptr[5].CLK
clk => rd_ptr[6].CLK
clk => rd_ptr[7].CLK
clk => rd_ptr[8].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => wr_ptr[0].CLK
clk => wr_ptr[1].CLK
clk => wr_ptr[2].CLK
clk => wr_ptr[3].CLK
clk => wr_ptr[4].CLK
clk => wr_ptr[5].CLK
clk => wr_ptr[6].CLK
clk => wr_ptr[7].CLK
clk => wr_ptr[8].CLK
clk => mem.CLK0
rst => rd_ptr[0].ACLR
rst => rd_ptr[1].ACLR
rst => rd_ptr[2].ACLR
rst => rd_ptr[3].ACLR
rst => rd_ptr[4].ACLR
rst => rd_ptr[5].ACLR
rst => rd_ptr[6].ACLR
rst => rd_ptr[7].ACLR
rst => rd_ptr[8].ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => wr_ptr[0].ACLR
rst => wr_ptr[1].ACLR
rst => wr_ptr[2].ACLR
rst => wr_ptr[3].ACLR
rst => wr_ptr[4].ACLR
rst => wr_ptr[5].ACLR
rst => wr_ptr[6].ACLR
rst => wr_ptr[7].ACLR
rst => wr_ptr[8].ACLR
rst => comb.IN1
write_en => always0.IN1
write_data[0] => mem.data_a[0].DATAIN
write_data[0] => mem.DATAIN
write_data[1] => mem.data_a[1].DATAIN
write_data[1] => mem.DATAIN1
write_data[2] => mem.data_a[2].DATAIN
write_data[2] => mem.DATAIN2
write_data[3] => mem.data_a[3].DATAIN
write_data[3] => mem.DATAIN3
write_data[4] => mem.data_a[4].DATAIN
write_data[4] => mem.DATAIN4
write_data[5] => mem.data_a[5].DATAIN
write_data[5] => mem.DATAIN5
write_data[6] => mem.data_a[6].DATAIN
write_data[6] => mem.DATAIN6
write_data[7] => mem.data_a[7].DATAIN
write_data[7] => mem.DATAIN7
read_en => always1.IN1
read_data[0] <= mem.DATAOUT
read_data[1] <= mem.DATAOUT1
read_data[2] <= mem.DATAOUT2
read_data[3] <= mem.DATAOUT3
read_data[4] <= mem.DATAOUT4
read_data[5] <= mem.DATAOUT5
read_data[6] <= mem.DATAOUT6
read_data[7] <= mem.DATAOUT7
data_valid <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
full <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[0] <= wr_ptr[0].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[1] <= wr_ptr[1].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[2] <= wr_ptr[2].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[3] <= wr_ptr[3].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[4] <= wr_ptr[4].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[5] <= wr_ptr[5].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[6] <= wr_ptr[6].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[7] <= wr_ptr[7].DB_MAX_OUTPUT_PORT_TYPE
wr_ptr_dbg[8] <= wr_ptr[8].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[0] <= rd_ptr[0].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[1] <= rd_ptr[1].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[2] <= rd_ptr[2].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[3] <= rd_ptr[3].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[4] <= rd_ptr[4].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[5] <= rd_ptr[5].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[6] <= rd_ptr[6].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[7] <= rd_ptr[7].DB_MAX_OUTPUT_PORT_TYPE
rd_ptr_dbg[8] <= rd_ptr[8].DB_MAX_OUTPUT_PORT_TYPE


|main|uart_tx:u_tx
clk => tx_shift[0].CLK
clk => tx_shift[1].CLK
clk => tx_shift[2].CLK
clk => tx_shift[3].CLK
clk => tx_shift[4].CLK
clk => tx_shift[5].CLK
clk => tx_shift[6].CLK
clk => tx_shift[7].CLK
clk => tx_valid_latched.CLK
clk => watchdog_cnt[0].CLK
clk => watchdog_cnt[1].CLK
clk => watchdog_cnt[2].CLK
clk => watchdog_cnt[3].CLK
clk => watchdog_cnt[4].CLK
clk => watchdog_cnt[5].CLK
clk => watchdog_cnt[6].CLK
clk => watchdog_cnt[7].CLK
clk => watchdog_cnt[8].CLK
clk => watchdog_cnt[9].CLK
clk => watchdog_cnt[10].CLK
clk => watchdog_cnt[11].CLK
clk => watchdog_cnt[12].CLK
clk => watchdog_cnt[13].CLK
clk => watchdog_cnt[14].CLK
clk => watchdog_cnt[15].CLK
clk => watchdog_cnt[16].CLK
clk => watchdog_cnt[17].CLK
clk => watchdog_cnt[18].CLK
clk => watchdog_cnt[19].CLK
clk => watchdog_cnt[20].CLK
clk => watchdog_cnt[21].CLK
clk => watchdog_cnt[22].CLK
clk => watchdog_cnt[23].CLK
clk => watchdog_cnt[24].CLK
clk => watchdog_cnt[25].CLK
clk => watchdog_cnt[26].CLK
clk => watchdog_cnt[27].CLK
clk => watchdog_cnt[28].CLK
clk => watchdog_cnt[29].CLK
clk => watchdog_cnt[30].CLK
clk => watchdog_cnt[31].CLK
clk => bit_idx[0].CLK
clk => bit_idx[1].CLK
clk => bit_idx[2].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => baud_cnt[13].CLK
clk => baud_cnt[14].CLK
clk => baud_cnt[15].CLK
clk => tx_ready~reg0.CLK
clk => serial_tx~reg0.CLK
clk => state~5.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => serial_tx.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => bit_idx.OUTPUTSELECT
rst => bit_idx.OUTPUTSELECT
rst => bit_idx.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => tx_valid_latched.OUTPUTSELECT
rst => tx_ready.OUTPUTSELECT
rst => tx_shift[4].ENA
rst => tx_shift[3].ENA
rst => tx_shift[2].ENA
rst => tx_shift[1].ENA
rst => tx_shift[0].ENA
rst => tx_shift[5].ENA
rst => tx_shift[6].ENA
rst => tx_shift[7].ENA
tx_data[0] => tx_shift.DATAB
tx_data[1] => tx_shift.DATAB
tx_data[2] => tx_shift.DATAB
tx_data[3] => tx_shift.DATAB
tx_data[4] => tx_shift.DATAB
tx_data[5] => tx_shift.DATAB
tx_data[6] => tx_shift.DATAB
tx_data[7] => tx_shift.DATAB
tx_valid => always0.IN1
tx_ready <= tx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_tx <= serial_tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_display:u_disp
bin[0] => Div0.IN40
bin[0] => Mod0.IN40
bin[1] => Div0.IN39
bin[1] => Mod0.IN39
bin[2] => Div0.IN38
bin[2] => Mod0.IN38
bin[3] => Div0.IN37
bin[3] => Mod0.IN37
bin[4] => Div0.IN36
bin[4] => Mod0.IN36
bin[5] => Div0.IN35
bin[5] => Mod0.IN35
bin[6] => Div0.IN34
bin[6] => Mod0.IN34
bin[7] => Div0.IN33
bin[7] => Mod0.IN33
bin[8] => Div0.IN32
bin[8] => Mod0.IN32
bin[9] => Div0.IN31
bin[9] => Mod0.IN31
bin[10] => Div0.IN30
bin[10] => Mod0.IN30
bin[11] => Div0.IN29
bin[11] => Mod0.IN29
bin[12] => Div0.IN28
bin[12] => Mod0.IN28
bin[13] => Div0.IN27
bin[13] => Mod0.IN27
bin[14] => Div0.IN26
bin[14] => Mod0.IN26
bin[15] => Div0.IN25
bin[15] => Mod0.IN25
bin[16] => Div0.IN24
bin[16] => Mod0.IN24
bin[17] => Div0.IN23
bin[17] => Mod0.IN23
bin[18] => Div0.IN22
bin[18] => Mod0.IN22
bin[19] => Div0.IN21
bin[19] => Mod0.IN21
bin[20] => Div0.IN20
bin[20] => Mod0.IN20
bin[21] => Div0.IN19
bin[21] => Mod0.IN19
bin[22] => Div0.IN18
bin[22] => Mod0.IN18
bin[23] => Div0.IN17
bin[23] => Mod0.IN17
digit5[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
digit5[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
digit5[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
digit5[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
digit4[0] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
digit4[1] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
digit4[2] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
digit4[3] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
digit3[0] <= Div2.DB_MAX_OUTPUT_PORT_TYPE
digit3[1] <= Div2.DB_MAX_OUTPUT_PORT_TYPE
digit3[2] <= Div2.DB_MAX_OUTPUT_PORT_TYPE
digit3[3] <= Div2.DB_MAX_OUTPUT_PORT_TYPE
digit2[0] <= Div3.DB_MAX_OUTPUT_PORT_TYPE
digit2[1] <= Div3.DB_MAX_OUTPUT_PORT_TYPE
digit2[2] <= Div3.DB_MAX_OUTPUT_PORT_TYPE
digit2[3] <= Div3.DB_MAX_OUTPUT_PORT_TYPE
digit1[0] <= Div4.DB_MAX_OUTPUT_PORT_TYPE
digit1[1] <= Div4.DB_MAX_OUTPUT_PORT_TYPE
digit1[2] <= Div4.DB_MAX_OUTPUT_PORT_TYPE
digit1[3] <= Div4.DB_MAX_OUTPUT_PORT_TYPE
digit0[0] <= Mod4.DB_MAX_OUTPUT_PORT_TYPE
digit0[1] <= Mod4.DB_MAX_OUTPUT_PORT_TYPE
digit0[2] <= Mod4.DB_MAX_OUTPUT_PORT_TYPE
digit0[3] <= Mod4.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h0
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h1
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h2
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h3
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h4
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:h5
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


