|uart_rx_top
clk => clk.IN1
key[0] => _.IN1
key[1] => ~NO_FANOUT~
serial_rx => serial_rx.IN1
dtr_n => ~NO_FANOUT~
leds[0] << rx_data[0].DB_MAX_OUTPUT_PORT_TYPE
leds[1] << rx_data[1].DB_MAX_OUTPUT_PORT_TYPE
leds[2] << rx_data[2].DB_MAX_OUTPUT_PORT_TYPE
leds[3] << rx_data[3].DB_MAX_OUTPUT_PORT_TYPE
leds[4] << rx_data[4].DB_MAX_OUTPUT_PORT_TYPE
leds[5] << rx_data[5].DB_MAX_OUTPUT_PORT_TYPE
leds[6] << rx_data[6].DB_MAX_OUTPUT_PORT_TYPE
leds[7] << rx_data[7].DB_MAX_OUTPUT_PORT_TYPE
serial_rx_out << serial_rx.DB_MAX_OUTPUT_PORT_TYPE
hex0[0] << hex_decoder:h0.seg
hex0[1] << hex_decoder:h0.seg
hex0[2] << hex_decoder:h0.seg
hex0[3] << hex_decoder:h0.seg
hex0[4] << hex_decoder:h0.seg
hex0[5] << hex_decoder:h0.seg
hex0[6] << hex_decoder:h0.seg
hex1[0] << hex_decoder:h1.seg
hex1[1] << hex_decoder:h1.seg
hex1[2] << hex_decoder:h1.seg
hex1[3] << hex_decoder:h1.seg
hex1[4] << hex_decoder:h1.seg
hex1[5] << hex_decoder:h1.seg
hex1[6] << hex_decoder:h1.seg
hex2[0] << hex_decoder:h2.seg
hex2[1] << hex_decoder:h2.seg
hex2[2] << hex_decoder:h2.seg
hex2[3] << hex_decoder:h2.seg
hex2[4] << hex_decoder:h2.seg
hex2[5] << hex_decoder:h2.seg
hex2[6] << hex_decoder:h2.seg


|uart_rx_top|uart_rxv2:u_rx
clk => watchdog_cnt[0].CLK
clk => watchdog_cnt[1].CLK
clk => watchdog_cnt[2].CLK
clk => watchdog_cnt[3].CLK
clk => watchdog_cnt[4].CLK
clk => watchdog_cnt[5].CLK
clk => watchdog_cnt[6].CLK
clk => watchdog_cnt[7].CLK
clk => watchdog_cnt[8].CLK
clk => watchdog_cnt[9].CLK
clk => watchdog_cnt[10].CLK
clk => watchdog_cnt[11].CLK
clk => watchdog_cnt[12].CLK
clk => watchdog_cnt[13].CLK
clk => watchdog_cnt[14].CLK
clk => watchdog_cnt[15].CLK
clk => data_valid~reg0.CLK
clk => rx_latch[0].CLK
clk => rx_latch[1].CLK
clk => rx_latch[2].CLK
clk => rx_latch[3].CLK
clk => rx_latch[4].CLK
clk => rx_latch[5].CLK
clk => rx_latch[6].CLK
clk => rx_latch[7].CLK
clk => rx_shift[0].CLK
clk => rx_shift[1].CLK
clk => rx_shift[2].CLK
clk => rx_shift[3].CLK
clk => rx_shift[4].CLK
clk => rx_shift[5].CLK
clk => rx_shift[6].CLK
clk => rx_shift[7].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => baud_cnt[13].CLK
clk => baud_cnt[14].CLK
clk => baud_cnt[15].CLK
clk => rx_sync_1.CLK
clk => rx_sync_0.CLK
clk => state~5.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => baud_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => bit_cnt.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_shift.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => rx_latch.OUTPUTSELECT
rst => data_valid.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
rst => watchdog_cnt.OUTPUTSELECT
serial_rx => rx_sync_0.DATAIN
data_out[0] <= rx_latch[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= rx_latch[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= rx_latch[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= rx_latch[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= rx_latch[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= rx_latch[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= rx_latch[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= rx_latch[7].DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_top|hex_display:u_disp
bin[0] => Div0.IN14
bin[0] => Mod0.IN14
bin[1] => Div0.IN13
bin[1] => Mod0.IN13
bin[2] => Div0.IN12
bin[2] => Mod0.IN12
bin[3] => Div0.IN11
bin[3] => Mod0.IN11
bin[4] => Div0.IN10
bin[4] => Mod0.IN10
bin[5] => Div0.IN9
bin[5] => Mod0.IN9
bin[6] => Div0.IN8
bin[6] => Mod0.IN8
bin[7] => Div0.IN7
bin[7] => Mod0.IN7
hundreds[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
hundreds[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
hundreds[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
hundreds[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
tens[0] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
ones[0] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_top|hex_decoder:h0
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_top|hex_decoder:h1
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|uart_rx_top|hex_decoder:h2
bin[0] => Decoder0.IN3
bin[1] => Decoder0.IN2
bin[2] => Decoder0.IN1
bin[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


